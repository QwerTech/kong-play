# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€
on: [ push,pull_request ]
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3 # v3.1.0

      - name: Build with Gradle Wrapper
        working-directory: ./sample-app
        run: ./gradlew build

#  dependency-submission:
#
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK
#        uses: actions/setup-java@v4
#        with:
#          java-version: '21'
#          distribution: 'corretto'
#
#      # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
#      # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
#      - name: Generate and submit dependency graph
#        uses: gradle/actions/dependency-submission@v3 # v3.1.0